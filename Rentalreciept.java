
package VRSgui;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.*;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import VRSgui.VehiclesUi;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import java.time.temporal.ChronoUnit;
import session.Clientsession;

public class Rentalreciept extends javax.swing.JFrame {

     public Rentalreciept(int contractID,int clientID) {
        initComponents(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        homebtnREC = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtareareciept = new javax.swing.JTextArea();
        generatereciept = new javax.swing.JButton();
        backmenu = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(0, 51, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        homebtnREC.setBackground(new java.awt.Color(204, 204, 204));
        homebtnREC.setFont(new java.awt.Font("Swis721 BlkCn BT", 0, 14)); // NOI18N
        homebtnREC.setForeground(new java.awt.Color(0, 0, 102));
        homebtnREC.setText("HOME");
        homebtnREC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homebtnRECActionPerformed(evt);
            }
        });

        exitbtn.setBackground(new java.awt.Color(204, 204, 204));
        exitbtn.setFont(new java.awt.Font("Swis721 BlkCn BT", 0, 14)); // NOI18N
        exitbtn.setForeground(new java.awt.Color(0, 0, 102));
        exitbtn.setText("EXIT");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Swis721 BlkCn BT", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("RECIEPT");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(homebtnREC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitbtn)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addComponent(exitbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(homebtnREC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "THANK YOU FOR RENTING!", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Swis721 BlkCn BT", 2, 14))); // NOI18N

        txtareareciept.setBackground(new java.awt.Color(204, 204, 204));
        txtareareciept.setColumns(20);
        txtareareciept.setFont(new java.awt.Font("Swis721 BlkCn BT", 0, 12)); // NOI18N
        txtareareciept.setRows(5);
        jScrollPane1.setViewportView(txtareareciept);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        generatereciept.setBackground(new java.awt.Color(255, 255, 255));
        generatereciept.setFont(new java.awt.Font("Swis721 BlkCn BT", 0, 14)); // NOI18N
        generatereciept.setText("GENERATE RECIEPT");
        generatereciept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generaterecieptActionPerformed(evt);
            }
        });

        backmenu.setBackground(new java.awt.Color(204, 204, 204));
        backmenu.setFont(new java.awt.Font("Swis721 BlkCn BT", 0, 14)); // NOI18N
        backmenu.setForeground(new java.awt.Color(0, 0, 102));
        backmenu.setText("BACK TO MENU");
        backmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backmenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(generatereciept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(backmenu, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generatereciept, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backmenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void homebtnRECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homebtnRECActionPerformed
        userOrAdmin next = new userOrAdmin ();
        next.setVisible(rootPaneCheckingEnabled);
        dispose();
    }//GEN-LAST:event_homebtnRECActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        exitSystem next = new exitSystem();
        next.setVisible(rootPaneCheckingEnabled);
        dispose();
    }//GEN-LAST:event_exitbtnActionPerformed

    
    private void generaterecieptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generaterecieptActionPerformed
            try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/vehiclerentalsystem", "root", "")) {
            // Fetch details from ClientSession
            int clientID = Clientsession.getInstance().getClientID();
            int vehicleID = Clientsession.getInstance().getVehicleID();
            int serviceID = Clientsession.getInstance().getserviceID();

            if (clientID <= 0 || vehicleID <= 0) {
                JOptionPane.showMessageDialog(this, "Client or vehicle details are missing. Please complete the rental process first.");
                return;
            }

            // Initialize variables for storing retrieved data
            String clientName = "";
            String clientContact = "";
            String vehicleModel = "";
            double totalPay = 0.0;
            String rentalStart = "";
            String rentalEnd = "";
            String userSignature = Clientsession.getInstance().getSignature(); // Ensure this is set during contract
            String dateAgreement = java.time.LocalDate.now().toString(); // Current date

            // Fetch client details
            String clientQuery = "SELECT clientName, ContactNumber FROM `clients details` WHERE clientID = ?";
            try (PreparedStatement clientStmt = conn.prepareStatement(clientQuery)) {
                clientStmt.setInt(1, clientID);
                try (ResultSet rs = clientStmt.executeQuery()) {
                    if (rs.next()) {
                        clientName = rs.getString("clientName");
                        clientContact = rs.getString("ContactNumber");
                    }
                }
            }

            // Fetch rental details (excluding vehicle type)
            String rentalQuery = "SELECT vehicleName AS vehicleModel, rentalStart, rentalEnd, amountToPay " +
                                 "FROM rentduration " +
                                 "JOIN rentedvehicles ON rentduration.clientID = rentedvehicles.clientID " +
                                 "WHERE rentduration.clientID = ? AND rentedvehicles.vehicleID = ?";
            try (PreparedStatement rentalStmt = conn.prepareStatement(rentalQuery)) {
                rentalStmt.setInt(1, clientID);
                rentalStmt.setInt(2, vehicleID);
                try (ResultSet rs = rentalStmt.executeQuery()) {
                    if (rs.next()) {
                        vehicleModel = rs.getString("vehicleModel");
                        rentalStart = rs.getString("rentalStart");
                        rentalEnd = rs.getString("rentalEnd");
                        totalPay = rs.getDouble("amountToPay");
                    }
                }
            }

            // Ensure all mandatory data is retrieved before proceeding
            if (clientName.isEmpty() || vehicleModel.isEmpty() || rentalStart.isEmpty() || rentalEnd.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Unable to generate receipt. Some details are missing.");
                return;
            }

            // Insert the data into the receipt table (including clientID)
            String receiptQuery = "INSERT INTO `reciept` " +
                                  "(recieptID, clientID, ClientName, clientContact, vehicleModel, serviceID, rentalStart, rentralEnd, totalPay, usersignature, dateagrement) " +
                                  "VALUES (NULL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            try (PreparedStatement pstmt = conn.prepareStatement(receiptQuery)) {
                pstmt.setInt(1, clientID);              // Client ID
                pstmt.setString(2, clientName);          // Client Name
                pstmt.setString(3, clientContact);      // Client Contact
                pstmt.setString(4, vehicleModel);       // Vehicle Model
                pstmt.setInt(5, serviceID);             // Service ID
                pstmt.setString(6, rentalStart);        // Rental Start Date
                pstmt.setString(7, rentalEnd);          // Rental End Date
                pstmt.setDouble(8, totalPay);           // Total Payment
                pstmt.setString(9, userSignature);      // User Signature
                pstmt.setString(10, dateAgreement);     // Date of Agreement

                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Receipt generated successfully!");
            }

            // Display receipt in a JTextArea, including clientID
            String receiptDetails = String.format(
                "------ Rental Receipt ------\n\n" +
                "Client ID: %d\n" + // Display Client ID
                "Client Name: %s\n" +
                "Contact Number: %s\n\n" +
                "Vehicle Model: %s\n" +
                "Rental Start: %s\n" +
                "Rental End: %s\n" +
                "Total Amount: ₱%.2f\n\n" +
                "User Signature: %s\n" +
                "Date of Agreement: %s\n",
                clientID, clientName, clientContact, vehicleModel, rentalStart, rentalEnd, totalPay, userSignature, dateAgreement
            );

            txtareareciept.setText(receiptDetails);

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage());
        }


    }//GEN-LAST:event_generaterecieptActionPerformed

    private void backmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backmenuActionPerformed
        usermenu next = new usermenu();
        next.setVisible(rootPaneCheckingEnabled);
        dispose();
    }//GEN-LAST:event_backmenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rentalreciept.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rentalreciept.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rentalreciept.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rentalreciept.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        int clientID = 1; // Example clientID (this should be fetched from a valid session or context)
        int contractID = 1; // Example contractID (this should be fetched from the database or session)

        // Create and display the Rentalreciept JFrame with contractID and clientID
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rentalreciept(contractID, clientID).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backmenu;
    private javax.swing.JButton exitbtn;
    private javax.swing.JButton generatereciept;
    private javax.swing.JButton homebtnREC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtareareciept;
    // End of variables declaration//GEN-END:variables
}
